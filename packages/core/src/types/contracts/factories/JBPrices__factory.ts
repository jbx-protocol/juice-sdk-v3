/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { JBPrices, JBPricesInterface } from "../JBPrices";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PRICE_FEED_ALREADY_EXISTS",
    type: "error",
  },
  {
    inputs: [],
    name: "PRICE_FEED_NOT_FOUND",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "currency",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "base",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "contract IJBPriceFeed",
        name: "feed",
        type: "address",
      },
    ],
    name: "AddFeed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_currency",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_base",
        type: "uint256",
      },
      {
        internalType: "contract IJBPriceFeed",
        name: "_feed",
        type: "address",
      },
    ],
    name: "addFeedFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "feedFor",
    outputs: [
      {
        internalType: "contract IJBPriceFeed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_currency",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_base",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
    ],
    name: "priceFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c8f380380610c8f83398101604081905261002f91610167565b61003833610047565b61004181610097565b50610197565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146100f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661015b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ed565b61016481610047565b50565b60006020828403121561017957600080fd5b81516001600160a01b038116811461019057600080fd5b9392505050565b610ae9806101a66000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806396364e6d1161005057806396364e6d1461010a578063a4d0caf21461011d578063f2fde38b1461013e57600080fd5b806315d63a9114610077578063715018a6146100e25780638da5cb5b146100ec575b600080fd5b6100b8610085366004610848565b600160209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100ea610151565b005b60005473ffffffffffffffffffffffffffffffffffffffff166100b8565b6100ea61011836600461088c565b6101e3565b61013061012b3660046108c5565b61039a565b6040519081526020016100d9565b6100ea61014c3660046108f1565b61059f565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101e160006106cf565b565b60005473ffffffffffffffffffffffffffffffffffffffff163314610264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ce565b600083815260016020908152604080832085845290915290205473ffffffffffffffffffffffffffffffffffffffff161515806102cf5750600082815260016020908152604080832086845290915290205473ffffffffffffffffffffffffffffffffffffffff1615155b15610306576040517fd28d564f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083815260016020908152604080832085845282529182902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85169081179091559151918252839185917f2809ef679fa4c20b88a6467f2660840ad173b5205fef76c270c5d7ba44cb7057910160405180910390a3505050565b60008284036103b5576103ae82600a610a5f565b9050610598565b600084815260016020908152604080832086845290915290205473ffffffffffffffffffffffffffffffffffffffff168015610482576040517f7a3c4c170000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff821690637a3c4c1790602401602060405180830381865afa158015610456573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047a9190610a6b565b915050610598565b50600083815260016020908152604080832087845290915290205473ffffffffffffffffffffffffffffffffffffffff1680156105665761047a6104c784600a610a5f565b6104d285600a610a5f565b6040517f7a3c4c170000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff851690637a3c4c1790602401602060405180830381865afa15801561053d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105619190610a6b565b610744565b6040517f75c9d5ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610620576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ce565b73ffffffffffffffffffffffffffffffffffffffff81166106c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101ce565b6106cc816106cf565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098587029250828110838203039150508060000361079c5783828161079257610792610a84565b0492505050610598565b8381106107df576040517f773cc18c00000000000000000000000000000000000000000000000000000000815260048101829052602481018590526044016101ce565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806040838503121561085b57600080fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff811681146106cc57600080fd5b6000806000606084860312156108a157600080fd5b833592506020840135915060408401356108ba8161086a565b809150509250925092565b6000806000606084860312156108da57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561090357600080fd5b81356105988161086a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b8085111561099657817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561097c5761097c61090e565b8085161561098957918102915b93841c9390800290610942565b509250929050565b6000826109ad57506001610a59565b816109ba57506000610a59565b81600181146109d057600281146109da576109f6565b6001915050610a59565b60ff8411156109eb576109eb61090e565b50506001821b610a59565b5060208310610133831016604e8410600b8410161715610a19575081810a610a59565b610a23838361093d565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610a5557610a5561090e565b0290505b92915050565b6000610598838361099e565b600060208284031215610a7d57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122018f421ad2683adf0ea7e9b0abad40e33823bd5d51e44c746da2b1a324ab2738b64736f6c63430008100033";

type JBPricesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JBPricesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JBPrices__factory extends ContractFactory {
  constructor(...args: JBPricesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<JBPrices> {
    return super.deploy(_owner, overrides || {}) as Promise<JBPrices>;
  }
  override getDeployTransaction(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): JBPrices {
    return super.attach(address) as JBPrices;
  }
  override connect(signer: Signer): JBPrices__factory {
    return super.connect(signer) as JBPrices__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JBPricesInterface {
    return new utils.Interface(_abi) as JBPricesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JBPrices {
    return new Contract(address, _abi, signerOrProvider) as JBPrices;
  }
}
