/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  JBChainlinkV3PriceFeed,
  JBChainlinkV3PriceFeedInterface,
} from "../../../../../../../../juice-contracts-v3/deployments/mainnet/JBChainlinkV3PriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "_feed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "INCOMPLETE_ROUND",
    type: "error",
  },
  {
    inputs: [],
    name: "NEGATIVE_PRICE",
    type: "error",
  },
  {
    inputs: [],
    name: "STALE_PRICE",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
    ],
    name: "currentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161068738038061068783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516105f06100976000396000818160400152818160b7015261021701526105f06000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806337a7b7d81461003b5780637a3c4c171461008c575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61009f61009a366004610323565b6100ad565b604051908152602001610083565b60008060008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610120573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610144919061035b565b9450945050935093508369ffffffffffffffffffff168169ffffffffffffffffffff16101561019f576040517f9cd6c6ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816000036101d8576040517e56b3a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000831215610213576040517fb6cc0ca100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a491906103ab565b60ff1690506102b48482896102bf565b979650505050505050565b60008282036102cf57508261031c565b828211156102fd576102e183836103fd565b6102ec90600a610536565b6102f69085610542565b905061031c565b61030782846103fd565b61031290600a610536565b6102f6908561057f565b9392505050565b60006020828403121561033557600080fd5b5035919050565b805169ffffffffffffffffffff8116811461035657600080fd5b919050565b600080600080600060a0868803121561037357600080fd5b61037c8661033c565b945060208601519350604086015192506060860151915061039f6080870161033c565b90509295509295909350565b6000602082840312156103bd57600080fd5b815160ff8116811461031c57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610410576104106103ce565b92915050565b600181815b8085111561046f57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610455576104556103ce565b8085161561046257918102915b93841c939080029061041b565b509250929050565b60008261048657506001610410565b8161049357506000610410565b81600181146104a957600281146104b3576104cf565b6001915050610410565b60ff8411156104c4576104c46103ce565b50506001821b610410565b5060208310610133831016604e8410600b84101617156104f2575081810a610410565b6104fc8383610416565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561052e5761052e6103ce565b029392505050565b600061031c8383610477565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561057a5761057a6103ce565b500290565b6000826105b5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122012bb14f736313a13fef05d419ea613a5dc2bc02d6dbea9cabd3697f1762dccf564736f6c63430008100033";

type JBChainlinkV3PriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JBChainlinkV3PriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JBChainlinkV3PriceFeed__factory extends ContractFactory {
  constructor(...args: JBChainlinkV3PriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _feed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<JBChainlinkV3PriceFeed> {
    return super.deploy(
      _feed,
      overrides || {}
    ) as Promise<JBChainlinkV3PriceFeed>;
  }
  override getDeployTransaction(
    _feed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_feed, overrides || {});
  }
  override attach(address: string): JBChainlinkV3PriceFeed {
    return super.attach(address) as JBChainlinkV3PriceFeed;
  }
  override connect(signer: Signer): JBChainlinkV3PriceFeed__factory {
    return super.connect(signer) as JBChainlinkV3PriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JBChainlinkV3PriceFeedInterface {
    return new utils.Interface(_abi) as JBChainlinkV3PriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JBChainlinkV3PriceFeed {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as JBChainlinkV3PriceFeed;
  }
}
