/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  JBSplitsStore,
  JBSplitsStoreInterface,
} from "../../../../../../../../contracts-v2/deployments/mainnet/JBSplitsStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IJBOperatorStore",
        name: "_operatorStore",
        type: "address",
      },
      {
        internalType: "contract IJBProjects",
        name: "_projects",
        type: "address",
      },
      {
        internalType: "contract IJBDirectory",
        name: "_directory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "INVALID_LOCKED_UNTIL",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_PROJECT_ID",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_SPLIT_PERCENT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_TOTAL_PERCENT",
    type: "error",
  },
  {
    inputs: [],
    name: "PREVIOUS_LOCKED_SPLITS_NOT_INCLUDED",
    type: "error",
  },
  {
    inputs: [],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "domain",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "group",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "preferClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "preferAddToBalance",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "projectId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockedUntil",
            type: "uint256",
          },
          {
            internalType: "contract IJBSplitAllocator",
            name: "allocator",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct JBSplit",
        name: "split",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SetSplit",
    type: "event",
  },
  {
    inputs: [],
    name: "directory",
    outputs: [
      {
        internalType: "contract IJBDirectory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operatorStore",
    outputs: [
      {
        internalType: "contract IJBOperatorStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projects",
    outputs: [
      {
        internalType: "contract IJBProjects",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_domain",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "group",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "preferClaimed",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "preferAddToBalance",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "percent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "projectId",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "beneficiary",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "lockedUntil",
                type: "uint256",
              },
              {
                internalType: "contract IJBSplitAllocator",
                name: "allocator",
                type: "address",
              },
            ],
            internalType: "struct JBSplit[]",
            name: "splits",
            type: "tuple[]",
          },
        ],
        internalType: "struct JBGroupedSplits[]",
        name: "_groupedSplits",
        type: "tuple[]",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_domain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_group",
        type: "uint256",
      },
    ],
    name: "splitsOf",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "preferClaimed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "preferAddToBalance",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "projectId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lockedUntil",
            type: "uint256",
          },
          {
            internalType: "contract IJBSplitAllocator",
            name: "allocator",
            type: "address",
          },
        ],
        internalType: "struct JBSplit[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200151a3803806200151a83398101604081905262000034916200005c565b6001600160601b0319606093841b811660805291831b821660a05290911b1660c052620000c9565b6000806000606084860312156200007257600080fd5b83516200007f81620000b0565b60208501519093506200009281620000b0565b6040850151909250620000a581620000b0565b809150509250925092565b6001600160a01b0381168114620000c657600080fd5b50565b60805160601c60a05160601c60c05160601c6113fe6200011c6000396000818161010d0152610262015260008181609a015261018801526000818160e6015281816105e201526106be01526113fe6000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063ad007d6311610050578063ad007d63146100e1578063c41c2f2414610108578063f2da44b61461012f57600080fd5b806369e11cc51461006c5780638b79543c14610095575b600080fd5b61007f61007a366004610f3b565b610144565b60405161008c9190610f67565b60405180910390f35b6100bc7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008c565b6100bc7f000000000000000000000000000000000000000000000000000000000000000081565b6100bc7f000000000000000000000000000000000000000000000000000000000000000081565b61014261013d366004610eb8565b610159565b005b6060610151848484610365565b949350505050565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018590527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636352211e9060240160206040518083038186803b1580156101df57600080fd5b505afa1580156101f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102179190610e77565b6040517f5dd8f6aa000000000000000000000000000000000000000000000000000000008152600481018690528590601290339073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635dd8f6aa9060240160206040518083038186803b1580156102a457600080fd5b505afa1580156102b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dc9190610e77565b73ffffffffffffffffffffffffffffffffffffffff16146102ff8484848461055e565b8460005b8181101561035957600088888381811061031f5761031f611337565b905060200281019061033191906110a5565b61033a90611196565b90506103508b8b83600001518460200151610777565b50600101610303565b50505050505050505050565b60008381526020818152604080832085845282528083208484529091528120546060918167ffffffffffffffff8111156103a1576103a1611366565b60405190808252806020026020018201604052801561042657816020015b6040805160e08101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816103bf5790505b50905060005b828110156105545760008781526001602081815260408084208a855282528084208985528252808420858552825280842054815160e08101835260a0810186905260c081018690528185168514815281851c851690941484840152600281811c63ffffffff1685840152602282901c66ffffffffffffff166060860152605a82901c73ffffffffffffffffffffffffffffffffffffffff1660808601528c865283528185208b865283528185208a865283528185208686529092529092205480156105205765ffffffffffff811660a083015273ffffffffffffffffffffffffffffffffffffffff603082901c1660c08301525b8185858151811061053357610533611337565b6020026020010181905250505050808061054c906112cf565b91505061042c565b5095945050505050565b8015801561058257503373ffffffffffffffffffffffffffffffffffffffff851614155b801561065e57506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260448201859052606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b15801561062457600080fd5b505afa158015610638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065c9190610e9b565b155b801561073a57506040517fc161c93f00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff858116602483015260006044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063c161c93f9060840160206040518083038186803b15801561070057600080fd5b505afa158015610714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107389190610e9b565b155b15610771576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6000610784858585610365565b905060005b81518110156109da578181815181106107a4576107a4611337565b602002602001015160a0015142106107bb576109c8565b6000805b845181101561098e578383815181106107da576107da611337565b6020026020010151604001518582815181106107f8576107f8611337565b602002602001015160400151148015610876575083838151811061081e5761081e611337565b60200260200101516080015173ffffffffffffffffffffffffffffffffffffffff1685828151811061085257610852611337565b60200260200101516080015173ffffffffffffffffffffffffffffffffffffffff16145b80156108e7575083838151811061088f5761088f611337565b602002602001015160c0015173ffffffffffffffffffffffffffffffffffffffff168582815181106108c3576108c3611337565b602002602001015160c0015173ffffffffffffffffffffffffffffffffffffffff16145b801561092c575083838151811061090057610900611337565b60200260200101516060015185828151811061091e5761091e611337565b602002602001015160600151145b8015610972575083838151811061094557610945611337565b602002602001015160a0015185828151811061096357610963611337565b602002602001015160a0015110155b1561097c57600191505b80610986816112cf565b9150506107bf565b50806109c6576040517f1974459500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b806109d2816112cf565b915050610789565b506000805b8351811015610e4e578381815181106109fa576109fa611337565b60200260200101516040015160001415610a40576040517fe119ba4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b66ffffffffffffff8016848281518110610a5c57610a5c611337565b6020026020010151606001511115610aa0576040517f3b44d99200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b838181518110610ab257610ab2611337565b60200260200101516040015182610ac9919061117e565b9150633b9aca00821115610b09576040517feca7361000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848281518110610b1d57610b1d611337565b60200260200101516000015115610b32575060015b848281518110610b4457610b44611337565b60200260200101516020015115610b59576002175b6002858381518110610b6d57610b6d611337565b602002602001015160400151901b811790506022858381518110610b9357610b93611337565b602002602001015160600151901b81179050605a858381518110610bb957610bb9611337565b6020908102919091018101516080015160008b81526001835260408082208c835284528082208b8352845280822087835290935291822073ffffffffffffffffffffffffffffffffffffffff90911690921b92909217908190558551909190869084908110610c2a57610c2a611337565b602002602001015160a001511180610c8c5750600073ffffffffffffffffffffffffffffffffffffffff16858381518110610c6757610c67611337565b602002602001015160c0015173ffffffffffffffffffffffffffffffffffffffff1614155b15610d8c5765ffffffffffff8016858381518110610cac57610cac611337565b602002602001015160a001511115610cf0576040517fd509b54d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858381518110610d0457610d04611337565b602002602001015160a0015165ffffffffffff1690506030868481518110610d2e57610d2e611337565b60209081029190910181015160c0015160008c81526002835260408082208d835284528082208c835284528082208883529093529190912073ffffffffffffffffffffffffffffffffffffffff90911690911b919091179055610de6565b60008881526002602090815260408083208a84528252808320898452825280832085845290915290205415610de65760008881526002602090815260408083208a8452825280832089845282528083208584529091528120555b8587897f1d65eeba667d8160993d485b4782f11eef3bc64186c6521f2a0801f816e752e7888681518110610e1c57610e1c611337565b602002602001015133604051610e33929190611014565b60405180910390a45080610e46816112cf565b9150506109df565b505090516000948552602085815260408087209587529481528486209386529290925250912055565b600060208284031215610e8957600080fd5b8151610e9481611395565b9392505050565b600060208284031215610ead57600080fd5b8151610e94816113ba565b60008060008060608587031215610ece57600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115610ef457600080fd5b818701915087601f830112610f0857600080fd5b813581811115610f1757600080fd5b8860208260051b8501011115610f2c57600080fd5b95989497505060200194505050565b600080600060608486031215610f5057600080fd5b505081359360208301359350604090920135919050565b6020808252825182820181905260009190848201906040850190845b8181101561100857610ff58385518051151582526020810151151560208301526040810151604083015260608101516060830152608081015173ffffffffffffffffffffffffffffffffffffffff808216608085015260a083015160a08501528060c08401511660c085015250505050565b9284019260e09290920191600101610f83565b50909695505050505050565b610100810161108282858051151582526020810151151560208301526040810151604083015260608101516060830152608081015173ffffffffffffffffffffffffffffffffffffffff808216608085015260a083015160a08501528060c08401511660c085015250505050565b73ffffffffffffffffffffffffffffffffffffffff831660e08301529392505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18336030181126110d957600080fd5b9190910192915050565b6040805190810167ffffffffffffffff8111828210171561110657611106611366565b60405290565b60405160e0810167ffffffffffffffff8111828210171561110657611106611366565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561117657611176611366565b604052919050565b6000821982111561119157611191611308565b500190565b600060408083360312156111a957600080fd5b6111b16110e3565b8335815260208085013567ffffffffffffffff808211156111d157600080fd5b9086019036601f8301126111e457600080fd5b8135818111156111f6576111f6611366565b611204848260051b0161112f565b818152848101925083850160e03681850287018801111561122457600080fd5b60009550855b848110156112ba57818336031215611240578687fd5b61124861110c565b8335611253816113ba565b815283890135611262816113ba565b818a0152838b01358b8201526060808501359082015260808085013561128781611395565b9082015260a0848101359082015260c0808501356112a481611395565b908201528652948701949181019160010161122a565b50505093850193909352509195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561130157611301611308565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff811681146113b757600080fd5b50565b80151581146113b757600080fdfea2646970667358221220a76aaa0b4dcfcfab18ac104ddb11272ef89f2e43882924ef6ebe78b5f006791764736f6c63430008060033";

type JBSplitsStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JBSplitsStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JBSplitsStore__factory extends ContractFactory {
  constructor(...args: JBSplitsStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _operatorStore: string,
    _projects: string,
    _directory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<JBSplitsStore> {
    return super.deploy(
      _operatorStore,
      _projects,
      _directory,
      overrides || {}
    ) as Promise<JBSplitsStore>;
  }
  override getDeployTransaction(
    _operatorStore: string,
    _projects: string,
    _directory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _operatorStore,
      _projects,
      _directory,
      overrides || {}
    );
  }
  override attach(address: string): JBSplitsStore {
    return super.attach(address) as JBSplitsStore;
  }
  override connect(signer: Signer): JBSplitsStore__factory {
    return super.connect(signer) as JBSplitsStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JBSplitsStoreInterface {
    return new utils.Interface(_abi) as JBSplitsStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JBSplitsStore {
    return new Contract(address, _abi, signerOrProvider) as JBSplitsStore;
  }
}
