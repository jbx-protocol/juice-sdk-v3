/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  JBOperatorStore,
  JBOperatorStoreInterface,
} from "../../../../../../../../contracts-v2/deployments/mainnet/JBOperatorStore";

const _abi = [
  {
    inputs: [],
    name: "PERMISSION_INDEX_OUT_OF_BOUNDS",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "domain",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "permissionIndexes",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "packed",
        type: "uint256",
      },
    ],
    name: "SetOperator",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_domain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_permissionIndex",
        type: "uint256",
      },
    ],
    name: "hasPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_domain",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_permissionIndexes",
        type: "uint256[]",
      },
    ],
    name: "hasPermissions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "permissionsOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "domain",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "permissionIndexes",
            type: "uint256[]",
          },
        ],
        internalType: "struct JBOperatorData",
        name: "_operatorData",
        type: "tuple",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "domain",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "permissionIndexes",
            type: "uint256[]",
          },
        ],
        internalType: "struct JBOperatorData[]",
        name: "_operatorData",
        type: "tuple[]",
      },
    ],
    name: "setOperators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610973806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806380deb2301161005057806380deb230146100a95780638d5f697f146100e7578063c161c93f146100fa57600080fd5b80630f5932f01461006c578063529cdd2e14610094575b600080fd5b61007f61007a36600461067b565b61010d565b60405190151581526020015b60405180910390f35b6100a76100a236600461076e565b6101e0565b005b6100d96100b736600461063f565b6000602081815293815260408082208552928152828120909352825290205481565b60405190815260200161008b565b6100a76100f536600461072c565b6102bf565b61007f6101083660046106ea565b61049b565b6000805b828110156101d157600084848381811061012d5761012d61090e565b90506020020135905060ff811115610171576040517f8e9503a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff888116600090815260208181526040808320938b16835292815282822089835290522054811c6001166101be576000925050506101d7565b50806101c9816108ae565b915050610111565b50600190505b95945050505050565b60006101f76101f26040840184610808565b610522565b90508060008061020a602086018661061d565b73ffffffffffffffffffffffffffffffffffffffff16815260208082019290925260409081016000908120338083529084528282208785018035808552919095529290912093909355919061025f908561061d565b73ffffffffffffffffffffffffffffffffffffffff167f9dee2ffb464e2d0198cd20321be1ae3f79ed49f7ed4abfaa7ee4fe982bbeb3206102a36040870187610808565b866040516102b3939291906107a9565b60405180910390a45050565b60005b818110156104965760006103018484848181106102e1576102e161090e565b90506020028101906102f39190610870565b6101f2906040810190610808565b9050806000808686868181106103195761031961090e565b905060200281019061032b9190610870565b61033990602081019061061d565b73ffffffffffffffffffffffffffffffffffffffff1681526020808201929092526040908101600090812033825290925281209086868681811061037f5761037f61090e565b90506020028101906103919190610870565b602001358152602001908152602001600020819055508383838181106103b9576103b961090e565b90506020028101906103cb9190610870565b60200135338585858181106103e2576103e261090e565b90506020028101906103f49190610870565b61040290602081019061061d565b73ffffffffffffffffffffffffffffffffffffffff167f9dee2ffb464e2d0198cd20321be1ae3f79ed49f7ed4abfaa7ee4fe982bbeb32087878781811061044b5761044b61090e565b905060200281019061045d9190610870565b61046b906040810190610808565b8660405161047b939291906107a9565b60405180910390a4508061048e816108ae565b9150506102c2565b505050565b600060ff8211156104d8576040517f8e9503a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff808516600090815260208181526040808320938716835292815282822085835290522054600190821c811614949350505050565b6000805b828110156105a15760008484838181106105425761054261090e565b90506020020135905060ff811115610586576040517f8e9503a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001901b919091179080610599816108ae565b915050610526565b5092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146105cc57600080fd5b919050565b60008083601f8401126105e357600080fd5b50813567ffffffffffffffff8111156105fb57600080fd5b6020830191508360208260051b850101111561061657600080fd5b9250929050565b60006020828403121561062f57600080fd5b610638826105a8565b9392505050565b60008060006060848603121561065457600080fd5b61065d846105a8565b925061066b602085016105a8565b9150604084013590509250925092565b60008060008060006080868803121561069357600080fd5b61069c866105a8565b94506106aa602087016105a8565b935060408601359250606086013567ffffffffffffffff8111156106cd57600080fd5b6106d9888289016105d1565b969995985093965092949392505050565b6000806000806080858703121561070057600080fd5b610709856105a8565b9350610717602086016105a8565b93969395505050506040820135916060013590565b6000806020838503121561073f57600080fd5b823567ffffffffffffffff81111561075657600080fd5b610762858286016105d1565b90969095509350505050565b60006020828403121561078057600080fd5b813567ffffffffffffffff81111561079757600080fd5b82016060818503121561063857600080fd5b6040815282604082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8411156107e257600080fd5b8360051b8086606085013760009083016060019081526020909201929092529392505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261083d57600080fd5b83018035915067ffffffffffffffff82111561085857600080fd5b6020019150600581901b360382131561061657600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18336030181126108a457600080fd5b9190910192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610907577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220d05e8a761279e7bd7ea368f81c63870af45c8823511c03ab392a4fed5802aa4b64736f6c63430008060033";

type JBOperatorStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JBOperatorStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JBOperatorStore__factory extends ContractFactory {
  constructor(...args: JBOperatorStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<JBOperatorStore> {
    return super.deploy(overrides || {}) as Promise<JBOperatorStore>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): JBOperatorStore {
    return super.attach(address) as JBOperatorStore;
  }
  override connect(signer: Signer): JBOperatorStore__factory {
    return super.connect(signer) as JBOperatorStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JBOperatorStoreInterface {
    return new utils.Interface(_abi) as JBOperatorStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JBOperatorStore {
    return new Contract(address, _abi, signerOrProvider) as JBOperatorStore;
  }
}
